@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

}
<h1 id="patientName"></h1>

<table id="medicalTransactionsTable" class="table table-striped">
    <thead>
        <tr>
            <th>Patient First</th>
            <th>Patient Last</th>
            <th>Total Cost</th>
            <th>Date</th>
            <th>Nurse</th>
            <th>Doctor</th>

        </tr>
    </thead>
    <tbody>
        <!-- Data will be populated here using JavaScript -->
    </tbody>
</table>

<span id="pageInfo" class="mr-2">Page <span id="currentPage">1</span> of <span id="totalPages">?</span></span>

<ul class="pagination">
    <li class="page-item">
        <button class="page-link" id="firstPage">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
                <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
            </svg>
        </button>
    </li>

    <li class="page-item">
        <button class="page-link" id="prevPage">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
            </svg>
        </button>
    </li>
   
    <li class="page-item">
        <button class="page-link" id="nextPage">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708" />
            </svg>
        </button>
    </li>

    <li class="page-item">
        <button class="page-link" id="lastPage">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708" />
                <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708" />
            </svg>
        </button>
    </li>

    <li class="page-item ms-5">
        <input type="number" class="form-control form-control-color" id="page-input" title="Input a Page" placeholder="#" style="cursor: text;">
    </li>

    <li class="page-item">
        <button type="submit" id="submitButton"class="btn btn-primary ms-1">GO</button>
    </li>
       
  
</ul>
</nav>
<script>
    document.addEventListener("DOMContentLoaded", function () {

        let currentPage = 1;
        const pageSize = 10;
        loadPage(currentPage);
        document.getElementById('nextPage').addEventListener('click', function () {
            currentPage++;
            loadPage(currentPage);
        });

        document.getElementById('lastPage').addEventListener('click', function () {
            currentPage = totalPages.innerHTML
            loadPage(currentPage);

        });

        document.getElementById('firstPage').addEventListener('click', function () {
            currentPage = 1;
            loadPage(currentPage);
        });

        document.getElementById('prevPage').addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                loadPage(currentPage);
            }
        });

        document.getElementById('page-input').addEventListener('keypress', function (e) {
            if (e.key === "Enter"){
                let page = document.getElementById('page-input').value;
                if (page > 0 && page <= parseInt(totalPages.innerHTML)) {
                    currentPage = page;
                }
                loadPage(currentPage);
            }
        });

        document.getElementById('submitButton').addEventListener('click', function () {
            let page = document.getElementById('page-input').value;
            if (page > 0 && page <= parseInt(totalPages.innerHTML)) {
                currentPage = page;
            }
            loadPage(currentPage);
        });
    });

    function loadPage(pageIndex) {
        // document.getElementById('spinner').style.display = 'block';

        //Get patientId from query string
        const searchParams = new URLSearchParams(window.location.search);
        var patientId = searchParams.get('patientId');
        var url = `/medicalTransactions/GetMedicalTransactions?pageIndex=${pageIndex}&pageSize=10`;
        if (patientId) {
            url += '&patientId=' + patientId;
        }

        fetch(url)
            .then(response => response.json())
            .then(data => {
                populateTable(data, patientId);
                updatePagingControls(pageIndex, data.totalRecords);
                //document.getElementById('spinner').style.display = 'none';
            })
            .catch(error => console.error('Unable to get medical transactions data.', error));
    }
    function updatePagingControls(currentPage, totalCount) {
        const pageSize = 10;
        const totalPages = Math.ceil(totalCount / pageSize);

        document.getElementById('currentPage').textContent = currentPage;
        document.getElementById('totalPages').textContent = totalPages;

        document.getElementById('prevPage').disabled = currentPage <= 1;
        document.getElementById('nextPage').disabled = currentPage >= totalPages;
    }

    function populateTable(data, patientId) {
        const tableBody = document.getElementById('medicalTransactionsTable').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = ''; // Clear the table body

        //Display to webpage whether medical transactions is filtered or not
        var patientName = 'All Patients';
        if (patientId) {
            patientName = data.patientName;
        }
        document.getElementById('patientName').innerText = 'Medical Transactions of ' + patientName;
        // Iterate through the data and append rows to the table body
        data.data.forEach(mt => {
            let row = tableBody.insertRow();
            let cell1 = row.insertCell(0);
            let cell2 = row.insertCell(1);
            let cell3 = row.insertCell(2);
            let cell4 = row.insertCell(3);
            let cell5 = row.insertCell(4);
            let cell6 = row.insertCell(5);


            cell1.innerHTML = mt.patientFirstName;
            cell2.innerHTML = mt.patientLastName;
            cell3.innerHTML = mt.totalCost;
            cell4.innerHTML = mt.transactionDate;
            cell5.innerHTML = (mt.nurseFirstName + ' ' + mt.nurseLastName);
            cell6.innerHTML = (mt.doctorFirstName + ' ' + mt.doctorLastName);
        });
    }</script>
